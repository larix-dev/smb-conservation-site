{
  "version": 3,
  "sources": ["../keystone.ts", "../schema.ts", "../auth.ts"],
  "sourcesContent": ["import {config} from '@keystone-6/core'\r\nimport {lists} from './schema'\r\nimport {withAuth, session} from './auth'\r\nimport 'dotenv/config'\r\n\r\nconst port = process.env.PORT ? parseInt(process.env.PORT) : 3000\r\n\r\nexport default withAuth(\r\n  config({\r\n    db: {\r\n      provider: 'sqlite',\r\n      url: 'file:./keystone.db'\r\n    },\r\n    lists,\r\n    session,\r\n    storage: {\r\n      localImages: {\r\n        kind: 'local',\r\n        type: 'image',\r\n        generateUrl: path => `http://localhost:${port}/images${path}`, // add external url env var\r\n        serverRoute: {\r\n          path: '/images'\r\n        },\r\n        storagePath: 'storage/localImages'\r\n      }\r\n    },\r\n    server: {\r\n      cors: {origin: [process.env.CLIENT_URL!], credentials: true},\r\n      port: port\r\n    }\r\n  })\r\n)\r\n", "import {list} from '@keystone-6/core'\r\nimport {allowAll} from '@keystone-6/core/access'\r\nimport {relationship, image, text, password, timestamp, select, checkbox, calendarDay} from '@keystone-6/core/fields'\r\nimport {document} from '@keystone-6/fields-document'\r\n\r\nimport type {Lists} from '.keystone/types'\r\n\r\nexport const lists: Lists = {\r\n  User: list({\r\n    access: allowAll,\r\n    fields: {\r\n      name: text({validation: {isRequired: true}}),\r\n      email: text({\r\n        validation: {isRequired: true},\r\n        isIndexed: 'unique'\r\n      }),\r\n      password: password({validation: {isRequired: true}}),\r\n      createdAt: timestamp({\r\n        defaultValue: {kind: 'now'}\r\n      }),\r\n      isAdmin: checkbox()\r\n    }\r\n  }),\r\n  Announcement: list({\r\n    access: allowAll,\r\n    fields: {\r\n      text: text({validation: {isRequired: true}}),\r\n      colour: select({\r\n        type: 'string',\r\n        options: [\r\n          {label: 'Red', value: 'red'},\r\n          {label: 'Orange', value: 'orange'},\r\n          {label: 'Yellow', value: 'yellow'},\r\n          {label: 'Green', value: 'green'},\r\n          {label: 'Blue', value: 'blue'},\r\n          {label: 'Violet', value: 'violet'}\r\n        ],\r\n        defaultValue: 'blue',\r\n        validation: {isRequired: true}\r\n      }),\r\n      active: checkbox({defaultValue: true})\r\n    }\r\n  }),\r\n  About: list({\r\n    access: allowAll,\r\n    isSingleton: true,\r\n    fields: {\r\n      content: document({\r\n        formatting: true\r\n      })\r\n    }\r\n  }),\r\n  Burial: list({\r\n    access: allowAll,\r\n    isSingleton: true,\r\n    fields: {\r\n      content: document({\r\n        formatting: true\r\n      })\r\n    }\r\n  }),\r\n  GalleryTag: list({\r\n    access: allowAll,\r\n    fields: {\r\n      tagName: text({validation: {isRequired: true}})\r\n    }\r\n  }),\r\n  GalleryImage: list({\r\n    access: allowAll,\r\n    fields: {\r\n      image: image({storage: 'localImages'}),\r\n      caption: text({validation: {isRequired: true, length: {max: 100}}}),\r\n      author: text({validation: {isRequired: true}}),\r\n      dateTaken: calendarDay({validation: {isRequired: true}}),\r\n      tags: relationship({\r\n        ref: 'GalleryTag',\r\n        many: true,\r\n        ui: {\r\n          labelField: 'tagName'\r\n        }\r\n      })\r\n    }\r\n  })\r\n}\r\n", "// Welcome to some authentication for Keystone\r\n//\r\n// This is using @keystone-6/auth to add the following\r\n// - A sign-in page for your Admin UI\r\n// - A cookie-based stateless session strategy\r\n//    - Using a User email as the identifier\r\n//    - 30 day cookie expiration\r\n//\r\n// This file does not configure what Users can do, and the default for this starter\r\n// project is to allow anyone - logged-in or not - to do anything.\r\n//\r\n// If you want to prevent random people on the internet from accessing your data,\r\n// you can find out how by reading https://keystonejs.com/docs/guides/auth-and-access-control\r\n//\r\n// If you want to learn more about how our out-of-the-box authentication works, please\r\n// read https://keystonejs.com/docs/apis/auth#authentication-api\r\n\r\nimport { randomBytes } from 'crypto';\r\nimport { createAuth } from '@keystone-6/auth';\r\n\r\n// see https://keystonejs.com/docs/apis/session for the session docs\r\nimport { statelessSessions } from '@keystone-6/core/session';\r\n\r\n// for a stateless session, a SESSION_SECRET should always be provided\r\n//   especially in production (statelessSessions will throw if SESSION_SECRET is undefined)\r\nlet sessionSecret = process.env.SESSION_SECRET;\r\nif (!sessionSecret && process.env.NODE_ENV !== 'production') {\r\n  sessionSecret = randomBytes(32).toString('hex');\r\n}\r\n\r\n// withAuth is a function we can use to wrap our base configuration\r\nconst { withAuth } = createAuth({\r\n  listKey: 'User',\r\n  identityField: 'email',\r\n\r\n  // this is a GraphQL query fragment for fetching what data will be attached to a context.session\r\n  //   this can be helpful for when you are writing your access control functions\r\n  //   you can find out more at https://keystonejs.com/docs/guides/auth-and-access-control\r\n  sessionData: 'name createdAt',\r\n  secretField: 'password',\r\n\r\n  // WARNING: remove initFirstItem functionality in production\r\n  //   see https://keystonejs.com/docs/config/auth#init-first-item for more\r\n  initFirstItem: {\r\n    // if there are no items in the database, by configuring this field\r\n    //   you are asking the Keystone AdminUI to create a new user\r\n    //   providing inputs for these fields\r\n    fields: ['name', 'email', 'password'],\r\n\r\n    // it uses context.sudo() to do this, which bypasses any access control you might have\r\n    //   you shouldn't use this in production\r\n  },\r\n});\r\n\r\n// statelessSessions uses cookies for session tracking\r\n//   these cookies have an expiry, in seconds\r\n//   we use an expiry of 30 days for this starter\r\nconst sessionMaxAge = 60 * 60 * 24 * 30;\r\n\r\n// you can find out more at https://keystonejs.com/docs/apis/session#session-api\r\nconst session = statelessSessions({\r\n  maxAge: sessionMaxAge,\r\n  secret: sessionSecret!,\r\n});\r\n\r\nexport { withAuth, session };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,eAAqB;;;ACArB,kBAAmB;AACnB,oBAAuB;AACvB,oBAA4F;AAC5F,6BAAuB;AAIhB,IAAM,QAAe;AAAA,EAC1B,UAAM,kBAAK;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,UAAM,oBAAK,EAAC,YAAY,EAAC,YAAY,KAAI,EAAC,CAAC;AAAA,MAC3C,WAAO,oBAAK;AAAA,QACV,YAAY,EAAC,YAAY,KAAI;AAAA,QAC7B,WAAW;AAAA,MACb,CAAC;AAAA,MACD,cAAU,wBAAS,EAAC,YAAY,EAAC,YAAY,KAAI,EAAC,CAAC;AAAA,MACnD,eAAW,yBAAU;AAAA,QACnB,cAAc,EAAC,MAAM,MAAK;AAAA,MAC5B,CAAC;AAAA,MACD,aAAS,wBAAS;AAAA,IACpB;AAAA,EACF,CAAC;AAAA,EACD,kBAAc,kBAAK;AAAA,IACjB,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,UAAM,oBAAK,EAAC,YAAY,EAAC,YAAY,KAAI,EAAC,CAAC;AAAA,MAC3C,YAAQ,sBAAO;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,UACP,EAAC,OAAO,OAAO,OAAO,MAAK;AAAA,UAC3B,EAAC,OAAO,UAAU,OAAO,SAAQ;AAAA,UACjC,EAAC,OAAO,UAAU,OAAO,SAAQ;AAAA,UACjC,EAAC,OAAO,SAAS,OAAO,QAAO;AAAA,UAC/B,EAAC,OAAO,QAAQ,OAAO,OAAM;AAAA,UAC7B,EAAC,OAAO,UAAU,OAAO,SAAQ;AAAA,QACnC;AAAA,QACA,cAAc;AAAA,QACd,YAAY,EAAC,YAAY,KAAI;AAAA,MAC/B,CAAC;AAAA,MACD,YAAQ,wBAAS,EAAC,cAAc,KAAI,CAAC;AAAA,IACvC;AAAA,EACF,CAAC;AAAA,EACD,WAAO,kBAAK;AAAA,IACV,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,QAAQ;AAAA,MACN,aAAS,iCAAS;AAAA,QAChB,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAAA,EACD,YAAQ,kBAAK;AAAA,IACX,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,QAAQ;AAAA,MACN,aAAS,iCAAS;AAAA,QAChB,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAAA,EACD,gBAAY,kBAAK;AAAA,IACf,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,aAAS,oBAAK,EAAC,YAAY,EAAC,YAAY,KAAI,EAAC,CAAC;AAAA,IAChD;AAAA,EACF,CAAC;AAAA,EACD,kBAAc,kBAAK;AAAA,IACjB,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,WAAO,qBAAM,EAAC,SAAS,cAAa,CAAC;AAAA,MACrC,aAAS,oBAAK,EAAC,YAAY,EAAC,YAAY,MAAM,QAAQ,EAAC,KAAK,IAAG,EAAC,EAAC,CAAC;AAAA,MAClE,YAAQ,oBAAK,EAAC,YAAY,EAAC,YAAY,KAAI,EAAC,CAAC;AAAA,MAC7C,eAAW,2BAAY,EAAC,YAAY,EAAC,YAAY,KAAI,EAAC,CAAC;AAAA,MACvD,UAAM,4BAAa;AAAA,QACjB,KAAK;AAAA,QACL,MAAM;AAAA,QACN,IAAI;AAAA,UACF,YAAY;AAAA,QACd;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;;;AClEA,oBAA4B;AAC5B,kBAA2B;AAG3B,qBAAkC;AAIlC,IAAI,gBAAgB,QAAQ,IAAI;AAChC,IAAI,CAAC,iBAAiB,QAAQ,IAAI,aAAa,cAAc;AAC3D,sBAAgB,2BAAY,EAAE,EAAE,SAAS,KAAK;AAChD;AAGA,IAAM,EAAE,SAAS,QAAI,wBAAW;AAAA,EAC9B,SAAS;AAAA,EACT,eAAe;AAAA;AAAA;AAAA;AAAA,EAKf,aAAa;AAAA,EACb,aAAa;AAAA;AAAA;AAAA,EAIb,eAAe;AAAA;AAAA;AAAA;AAAA,IAIb,QAAQ,CAAC,QAAQ,SAAS,UAAU;AAAA;AAAA;AAAA,EAItC;AACF,CAAC;AAKD,IAAM,gBAAgB,KAAK,KAAK,KAAK;AAGrC,IAAM,cAAU,kCAAkB;AAAA,EAChC,QAAQ;AAAA,EACR,QAAQ;AACV,CAAC;;;AF5DD,oBAAO;AAEP,IAAM,OAAO,QAAQ,IAAI,OAAO,SAAS,QAAQ,IAAI,IAAI,IAAI;AAE7D,IAAO,mBAAQ;AAAA,MACb,qBAAO;AAAA,IACL,IAAI;AAAA,MACF,UAAU;AAAA,MACV,KAAK;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,MACP,aAAa;AAAA,QACX,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,UAAQ,oBAAoB,IAAI,UAAU,IAAI;AAAA;AAAA,QAC3D,aAAa;AAAA,UACX,MAAM;AAAA,QACR;AAAA,QACA,aAAa;AAAA,MACf;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,EAAC,QAAQ,CAAC,QAAQ,IAAI,UAAW,GAAG,aAAa,KAAI;AAAA,MAC3D;AAAA,IACF;AAAA,EACF,CAAC;AACH;",
  "names": ["import_core"]
}
